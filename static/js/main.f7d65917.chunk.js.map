{"version":3,"sources":["Jokes.js","CategorySelect.js","App.js","index.js"],"names":["Jokes","props","useState","joke","setJoke","loading","setLoading","fetchRequest","useCallback","axios","get","params","category","then","res","data","value","error","console","log","useEffect","className","onClick","CategorySelect","App","categoryData","setCategoryData","setCategory","type","color","height","width","timeout","map","cat","class","ReactDOM","render","document","getElementById"],"mappings":"qQAqDeA,EAjDD,SAACC,GAAW,IAAD,EAEGC,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,OAGSF,oBAAS,GAHlB,mBAGdG,EAHc,KAGLC,EAHK,KAKfC,EAAeC,uBAAY,WAC7BC,IAAMC,IAAI,0CACV,CACIC,OAAS,CACLC,SAAWX,EAAMW,YAGxBC,MAAK,SAAAC,GACFR,GAAW,GACXF,EAAQU,EAAIC,KAAKC,UAAS,SAAAC,GACtBC,QAAQC,IAAIF,QAErB,CAAChB,EAAMW,WAgBV,OAdAQ,qBAAU,WACNX,IAAMC,IAAI,0CACV,CACIC,OAAS,CACLC,SAAWX,EAAMW,YAGxBC,MAAK,SAAAC,GACFR,GAAW,GACXF,EAAQU,EAAIC,KAAKC,UAAS,SAAAC,GACtBC,QAAQC,IAAIF,QAEtB,CAAChB,EAAMW,WAGL,sBAAKS,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SACKhB,EACG,iDAEA,4BAAIF,MAGZ,qBAAKkB,UAAU,WAAf,SACQ,wBAAQA,UAAU,MAAMC,QAASf,EAAjC,4BCnCLgB,EAVQ,SAACtB,GACpB,OACI,8BACI,qBAAKoB,UAAU,mBAAf,SACI,iCAAM,yCAAN,MAAyBpB,EAAMW,iB,iBCkDhCY,MAjDf,WAAgB,IAAD,EAE2BtB,mBAAS,IAFpC,mBAENuB,EAFM,KAEQC,EAFR,OAGmBxB,mBAAS,IAH5B,mBAGNU,EAHM,KAGIe,EAHJ,OAIiBzB,oBAAS,GAJ1B,mBAING,EAJM,KAIGC,EAJH,KAgBb,OAVAc,qBAAU,WACNX,IAAMC,IAAI,+CACTG,MAAK,SAAAC,GACJR,GAAW,GACXoB,EAAgBZ,EAAIC,SACnB,SAAAE,GACDC,QAAQC,IAAIF,QAEhB,IAGA,sBAAKI,UAAU,MAAf,UACI,qBAAKA,UAAU,MAAf,SACE,sDAEF,qBAAKA,UAAU,aAAf,SACIhB,EACA,cAAC,IAAD,CACEuB,KAAK,YACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAGXP,EAAaQ,KAAI,SAACC,GAAD,OACf,sBACEb,UAAU,WACVC,QAAW,kBAAMK,EAAYO,IAF/B,SAGIA,SAIV,qBAAKb,UAAU,iBAAf,SACI,cAAC,EAAD,CAAgBT,SAAUA,MAE9B,qBAAKuB,MAAM,GAAX,SACI,cAAC,EAAD,CAAOvB,SAAUA,UC7C7BwB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f7d65917.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './Jokes.css';\r\n\r\nconst Jokes = (props) => {\r\n\r\n    const [joke, setJoke] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const fetchRequest = useCallback(() => {\r\n        axios.get('https://api.chucknorris.io/jokes/random',\r\n        {\r\n            params : {\r\n                category : props.category\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false);\r\n            setJoke(res.data.value)}, error => {\r\n                console.log(error)\r\n              })\r\n    }, [props.category]);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://api.chucknorris.io/jokes/random',\r\n        {\r\n            params : {\r\n                category : props.category\r\n            }\r\n        })\r\n        .then(res => {\r\n            setLoading(false);\r\n            setJoke(res.data.value)}, error => {\r\n                console.log(error)\r\n              })\r\n    },[props.category])\r\n\r\n    return (\r\n        <div className=\"jokes\">\r\n            <div className=\"joke\">\r\n                {loading ? (\r\n                    <h4>Select Category</h4>\r\n                ) : (\r\n                    <i>{joke}</i>\r\n                )}\r\n            </div>\r\n            <div className=\"btn-wrap\">\r\n                    <button className=\"btn\" onClick={fetchRequest}>New Joke</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jokes\r\n","import React from 'react'\r\n\r\nconst CategorySelect = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"selectedCategory\">\r\n                <span><u>Category</u> : {props.category}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategorySelect\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Jokes from './Jokes.js'\nimport CategorySelect from './CategorySelect.js';\nimport Loader from \"react-loader-spinner\";\n\nfunction App() {\n\n  const [categoryData, setCategoryData] = useState([])\n  const [category, setCategory] = useState('')\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n      axios.get('https://api.chucknorris.io/jokes/categories')\n      .then(res => {\n        setLoading(false);\n        setCategoryData(res.data)\n      }, error => {\n        console.log(error)\n      })\n  },[])\n\n  return (\n    <div className=\"App\">\n        <nav className=\"nav\">\n          <h1>Chuck Norris Jokes</h1>\n        </nav>\n        <div className=\"categories\">\n          { loading ? (\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#000000\"\n              height={50}\n              width={50}\n              timeout={3000} //3 secs\n            />\n          ) : (\n            categoryData.map((cat) => (\n              <span \n                className=\"category\"\n                onClick = {() => setCategory(cat)}\n                >{cat}</span>\n            ))\n          )}\n        </div>\n        <div className=\"CategorySelect\">\n            <CategorySelect category={category} />\n        </div>\n        <div class=\"\">\n            <Jokes category={category} /> \n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}